//wc: with comment

//Hw5-4-1 I-type testing 
00000000000100000000001010010011   //addi x5 x0 1
00000000001000101001001100010011   //slli x6 x5 2
00000000001000110010001110010011   //slti x0
00000000001000110011010000010011   // x8 = (x6 < 2) ? 1 : 0 = 0
00000000000100110100010010010011   // x9 = x6 XOR 1 = 5
00000000000100110101010100010011   // x10 = x6 >> 1 = 2
01000000000100110101010110010011   // x11 = x6 >> 1 = 2 (arithmetic shift right)
00000000000100110110011000010011   // x12 = x6 OR 1 = 5
00000000001100110111011010010011   // x13 = x6 AND 3 = 0

//Hw5-4-2 R-type testing
00000000101100001000011100110011 //add x14, x1, x11
01000000101100001000011110110011 //sub x15, x1, x11
00000000110000001001100000110011 //sll x16, x1, x12
00000000101100001010100010110011 //slt x17, x1, x11
00000000101100001011100100110011 //sltu x18, x1, x11
00000000101100001100100110110011 //xor x19, x1, x11
00000000110000001101101000110011 //srl x20, x1, x12
01000000110000001101101010110011 //sra x21, x1, x12
00000000101100001110101100110011 //or x22, x1, x11
00000000101100001111101110110011 //and x23, x1, x11

//Hw5-4-6 Load/Store inst. testing 
000000000000 00000 000 00001 0000011 //lb x1 x0 0 
000000000010 00000 001 00001 0000011 //lh x1 x0 2 
000000000000 00000 010 00001 0000011 //lw x1 x0 0 
000000000011 00000 100 00001 0000011 //lbu x1 x0 3 
000000000000 00000 101 00001 0000011 //lhu x1 x0 0 
0000000 00001 00000 000 00000 0100011 //sb x1 x0 0 
0000000 00001 00000 001 00010 0100011 //sh x1 x0 2 
0000000 00001 00000 010 00000 0100011 //sw x1 x0 0

//Hw5-4-8 B-type testing 
0000000 00001 00001 000 11000 1100011 //beq x1 x1 24 
0000000 00001 00001 001 10100 1100011 //bne x1 x1 20 
0000000 00010 00001 100 10000 1100011 //blt x1 x2 16 
0000000 00000 00001 101 01100 1100011 //bge x1 x0 12 
0000000 00001 00001 110 01000 1100011 //bltu x1 x1 8 
0000000 00001 00001 111 00100 1100011 //bgeu x1 x1 4

//Hw5-4-9 J-type testing
1 1111110110 1 11111111 00000 1101111 //jal x0 -20
0000000 10000 00100 000 00000 1100111//jalr x0 x4 16